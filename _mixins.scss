/*
We use a single file to declare all our Mixins to make sure we know where to find them rather
than have to search all files
*/
@mixin font-declaration($font-family, $weight:normal, $style:normal) {
  font-family: '$font-family';
  src:
    url('$font-family.eot?') format('eot'),
    url('$font-family.woff') format('woff'),
    url('$font-family.ttf') format('truetype'),
    url('$font-family.svg#$font-name') format('svg');
  font-weight: $weight;
  font-style: $style;

}


@mixin solid-thin() {
  border-width: thin;
  border-style: solid;
}

// This mixin will create column attributes for the element it's called in
// It uses variables to make life easier. Rather than code multiple attribute
// sets we use a single set that takes 2 attributes.
//
// $cols indicates the number of columns to use
// $gap indicates the gap between the columns (as in 20px)

@mixin column-attribs ($cols, $gap){
  -moz-column-count: $cols;
  -moz-column-gap: $gap;
  -webkit-column-count: $cols;
  -webkit-column-gap: $gap;
  column-count: $cols;
  column-gap: $gap;
}

/*
The following mixins are from http://web-design-weekly.com/2013/05/12/handy-sass-mixins/
*/

@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

/*
  Positioning mixins
*/
// http://codepen.io/piouPiouM/pen/bLmkz
// In response to the following article:
// http://hugogiraudel.com/2013/08/05/offsets-sass-mixin/

// variables were moved to _variables.scss file

// @private
@mixin _position($type,
                 $top: $position-default-top,
                 $right: $position-default-right,
                 $bottom: $position-default-bottom,
                 $left: $position-default-left) {
  $allowed_types: 'absolute' 'relative' 'fixed';

  @if not index($allowed_types, $type) {
    @warn "Unknow position: #{$type}.";
  }

  position: $type;
  @each $data in top $top, right $right, bottom $bottom, left $left {
    // Because of null value to default, if a position argument (eg `$top`) is not set,
    // Sass does not output the property.
    // Thus, values like 12px, 23em, -4rem, inherit or initial are accepted.
    #{nth($data, 1)}: nth($data, 2);
  }
}

@mixin absolute($top: $position-default-top, $right: $position-default-right,
                $bottom: $position-default-bottom, $left: $position-default-left) {
  @include _position(absolute, $top, $right, $bottom, $left);
}

@mixin relative($top: $position-default-top, $right: $position-default-right,
                $bottom: $position-default-bottom, $left: $position-default-left) {
  @include _position(relative, $top, $right, $bottom, $left);
}

@mixin fixed($top: $position-default-top, $right: $position-default-right,
                $bottom: $position-default-bottom, $left: $position-default-left) {
  @include _position(fixed, $top, $right, $bottom, $left);
}

// Media queries mixins
// See https://raw.githubusercontent.com/paranoida/sass-mediaqueries/master/_media-queries.scss
// for the fully commented code
// See http://paranoida.github.io/sass-mediaqueries/
// for tutorial and instructions

// ---------------------------------------------------------------------------------------------------------------------
// --- screen ----------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin screen($resMin, $resMax)
{
  @media screen and (min-width: $resMin) and (max-width: $resMax)
  {
    @content;
  }
}

@mixin max-screen($res)
{
  @media screen and (max-width: $res)
  {
    @content;
  }
}

@mixin min-screen($res)
{
  @media screen and (min-width: $res)
  {
    @content;
  }
}

@mixin screen-height($resMin, $resMax)
{
  @media screen and (min-height: $resMin) and (max-height: $resMax)
  {
    @content;
  }
}

@mixin max-screen-height($res)
{
  @media screen and (max-height: $res)
  {
    @content;
  }
}

@mixin min-screen-height($res)
{
  @media screen and (min-height: $res)
  {
    @content;
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- hdpi ------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

// Based on bourbon hidpi-media-queries file (https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/css3/_hidpi-media-query.scss)
// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)

@mixin hdpi($ratio: 1.3)
{
  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
  only screen and (min--moz-device-pixel-ratio: $ratio),
  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
  only screen and (min-resolution: #{round($ratio*96)}dpi),
  only screen and (min-resolution: #{$ratio}dppx)
  {
    @content;
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- iphone ----------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin iphone3($orientation: all)
{
  $deviceMinWidth: 320px;
  $deviceMaxWidth: 480px;
  $devicePixelRatio: 1;

  @if $orientation == all
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    and (-webkit-device-pixel-ratio: $devicePixelRatio)
    {
      @content;
    }
  }
  @else
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    and (-webkit-device-pixel-ratio: $devicePixelRatio) and (orientation:#{$orientation})
    {
      @content;
    }
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- iphone-retina ---------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin iphone4($orientation: all)
{
  $deviceMinWidth: 320px;
  $deviceMaxWidth: 480px;
  $devicePixelRatio: 2;
  $deviceAspectRatio: '2/3';

  @if $orientation == all
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    and (-webkit-device-pixel-ratio: $devicePixelRatio) and (device-aspect-ratio: $deviceAspectRatio)
    {
      @content;
    }
  }
  @else
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    and (-webkit-device-pixel-ratio: $devicePixelRatio) and (device-aspect-ratio: 2/3) and (orientation:#{$orientation})
    {
      @content;
    }
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- iphone-5 --------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin iphone5($orientation: all)
{
  $deviceMinWidth: 320px;
  $deviceMaxWidth: 568px;
  $devicePixelRatio: 2;
  $deviceAspectRatio: '40/71';

  @if $orientation == all
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    and (-webkit-device-pixel-ratio: $devicePixelRatio) and (device-aspect-ratio: $deviceAspectRatio)
    {
      @content;
    }
  }
  @else
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    and (-webkit-device-pixel-ratio: $devicePixelRatio) and (device-aspect-ratio: $deviceAspectRatio) and (orientation:#{$orientation})
    {
      @content;
    }
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- ipads (all) -----------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin ipad($orientation: all)
{
  $deviceMinWidth: 768px;
  $deviceMaxWidth: 1024px;

  @if $orientation == all
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    {
      @content;
    }
  }
  @else
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    and (orientation:#{$orientation})
    {
      @content;
    }
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- ipad-retina -----------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin ipad-retina($orientation: all)
{
  $deviceMinWidth: 768px;
  $deviceMaxWidth: 1024px;
  $devicePixelRatio: 2;

  @if $orientation == all
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    and (-webkit-device-pixel-ratio: $devicePixelRatio)
    {
      @content;
    }
  }
  @else
  {
    @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth)
    and (-webkit-device-pixel-ratio: $devicePixelRatio) and (orientation:#{$orientation})
    {
      @content;
    }
  }
}

